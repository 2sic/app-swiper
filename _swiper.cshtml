@* This tells the compiler to use the new RazorComponent - see https://r.2sxc.org/RazorComponent *@ 
@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;

<link rel="stylesheet" href="@App.Path/node_modules/swiper/css/swiper.min.css">
<link rel="stylesheet" href="@App.Path/dist/styles.min.css">

@* The following DIV will show a edit-hover-toolbar to admins - see https://r.2sxc.org/EditToolbar *@
<div @Edit.TagToolbar(Content)>
  @if(Edit.Enabled) {
    <p>Edit Slider</p>
  }

  <!-- Slider main container -->
  <div class="swiper-container" style='@(Text.Has(Content.Width) ? "width: Content.Width;" : "") @(Text.Has(Content.Height) ? "height: Content.Height;" : "")'>
    <!-- Additional required wrapper -->
    <div class="swiper-wrapper" data-swiper-autoplay="@Content.AutoplayDelay">
      <!-- Slides -->
      @foreach (var slide in Content.Slides)
      {
        <div class="swiper-slide" @Edit.TagToolbar(slide)>
          <div class="image-wrapper" style="background-image: url(@slide.Image?w=1600&q=80)">
            <div class="container-fluid h-100">
              <div class="row h-100 justify-content-center align-items-center">
                <div class="col-12 col-md-6 text-center">
                @if(!String.IsNullOrEmpty(slide.Title)){
                  <p class="lead">
                    @slide.Title
                  </p>
                }
                @if(!String.IsNullOrEmpty(slide.Text)){
                  <div class="co-slidertext">
                    @Html.Raw(slide.Text)
                  </div>
                }
                @if(!String.IsNullOrEmpty(slide.LinkText)){
                  <a class="btn btn-primary" href="@slide.Link" target="@(slide.LinkBlankTarget is bool && slide.LinkBlankTarget ? "_blank" : "_self")">@slide.LinkText</a>
                }
                </div>
              </div>
            </div>
          </div>
        </div>
      }
    </div>

    <!-- If we need pagination -->
    @if(Content.Pagination) {
      <div class="swiper-pagination"></div>
    }

    <!-- If we need navigation buttons -->
    @if(Content.Navigation) {
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    }
  </div>
</div>

<script src="@App.Path/node_modules/swiper/js/swiper.min.js"></script>

<script>
  var mySwiper = new Swiper ('.swiper-container', {
    // Optional parameters
    loop: true,
    autoplay: ('@Content.Autoplay' === 'True'),

    keyboard: {
      enabled: true,
    },

    // If we need pagination
    pagination: {
      el: '.swiper-pagination',
    },

    // Navigation arrows
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },

    effect: '@Content.SlideEffect',
  })
</script>

