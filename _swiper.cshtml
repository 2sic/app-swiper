@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;
@{
  var helpers = CreateInstance("_helpers.cshtml");
}

<link rel="stylesheet" href="@App.Path/node_modules/swiper/css/swiper.min.css" data-enableoptimizations="true">
<link rel="stylesheet" href="@App.Path/dist/styles.min.css" data-enableoptimizations="true">

<div @Edit.TagToolbar(Content, toolbar: new [] { "settings&hover=left&color=dimgray&autoAddMore=start" })>

  @* Slider main container *@
  @{
    var sliderStyleWidth = Text.Has(Content.Width) ? Content.Width : App.Settings.Width;
    var sliderStyleHeight = Text.Has(Content.Height) ? Content.Height : App.Settings.Height;
  }
  <div class="swiper-container swiper-@Dnn.Module.ModuleID" style="width: @sliderStyleWidth; height: @sliderStyleHeight">
    @* Additional required wrapper *@
    <div class="swiper-wrapper" data-swiper-autoplay="@(Text.Has(Content.AutoplayDelay) ? Content.AutoplayDelay : App.Settings.AutoplayDelay)">
      @* Slides *@
      @foreach (var slide in Content.Slides)
      {
        <div class="swiper-slide" @Edit.TagToolbar(slide, toolbar: new[] { "%layout&show=false", "%delete&show=true" } )>
          <div class="image-wrapper" style='background-image: url(@Tags.SafeUrl(slide.Image + "?w=1600&q=80"))'>
            <div class="container-fluid h-100">
              <div class="@helpers.RowClasses(slide)">
                <div class="@helpers.ContentClasses(slide)">
                @if(Text.Has(slide.Title)){
                  <p class="lead" data-swiper-parallax="-250">
                    @slide.Title
                  </p>
                }
                @if(Text.Has(slide.Text)){
                  <div class="co-slidertext" data-swiper-parallax="-500">
                    @Html.Raw(slide.Text)
                  </div>
                }
                @if(Text.Has(slide.LinkText)){
                  <div data-swiper-parallax="-750">
                    <a class="btn btn-primary" href="@Tags.SafeUrl(slide.Link)" target="@(slide.LinkBlankTarget == true ? "_blank" : "_self")">@slide.LinkText</a>
                  </div>
                }
                </div>
              </div>
            </div>
          </div>
        </div>
      }
    </div>

    @* If we need pagination *@
    @if(Content.Pagination != null ? Content.Pagination : App.Settings.Pagination ?? false) {
      <div class="swiper-pagination"></div>
    }

    @* If we need navigation buttons *@
    @if(Content.Navigation != null ? Content.Navigation : App.Settings.Navigation ?? false) {
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    }
  </div>
</div>

<script src="@App.Path/node_modules/swiper/js/swiper.min.js" data-enableoptimizations="true"></script>

<script>
  document.addEventListener("DOMContentLoaded", function(event) {
    var configured = {
      autoplay: ('@Content.Autoplay' === 'True'),
      speed: @(Text.Has(Content.Speed) ? Content.Speed : App.Settings.Speed),
    };
    var effectDefaults = @Html.Raw(Content.Effect.Configuration);
    var fallback = @Html.Raw(App.Settings.EffectFallback);
    var merged = Object.assign(fallback, effectDefaults, configured);
    var mySwiper = new Swiper ('.swiper-@Dnn.Module.ModuleID', merged);
  });
</script>

