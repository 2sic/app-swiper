@inherits Custom.Hybrid.Razor12
@using Newtonsoft.Json;
@using ToSic.Razor.Blade;
@{
  var helpers = CreateInstance("Helpers.cs");
  var swiperSettings = AsDynamic(Content, Settings);
  var sliderWidth = swiperSettings.Width;
  var sliderHeightOrRatio = swiperSettings.Height; // contains height or if ratio saparated by :

  // Prepare style to set aspect ratio if containes ratio
  var isRatio = sliderHeightOrRatio.IndexOf(":") > 0;
  var aspectRatioStyle = isRatio ? "--aspect-ratio:calc(" + sliderHeightOrRatio.Replace(":", "/")  + ")": "";
  var swiperContainerHeight = isRatio ? "" : "height: " + sliderHeightOrRatio + ";";
}

<div class="app-swiper2" @Edit.TagToolbar(Content, toolbar: new [] { "settings&hover=left&autoAddMore=start" })>
  <div style="@aspectRatioStyle">
    <div class="inner">
      @* Slider main container and wrapper *@
      <div class="swiper-container swiper-@Content.EntityId" style="width: @sliderWidth; @swiperContainerHeight">
        <div class="swiper-wrapper">
          @* Slides *@
          @foreach (var slide in Content.Slides)
          {
            var sldSettings = AsDynamic(slide, Content, Settings);
            var contentEffect = sldSettings.ContentEffect;
            var duration = sldSettings.ShowDuration;

            <div class="swiper-slide" data-swiper-autoplay="@duration" @(Content.IsDemoItem ? "" : Edit.TagToolbar(slide, toolbar: new[] { "%delete&show=true" } ))>
              <div class="image-wrapper @helpers.WrapperClasses(sldSettings)">
                @* Add the <picture> tag with all the sources *@
                @helpers.PictureTag(slide.Image.ToLower(), slide.Title)

                @if (Text.Has(slide.Title) || Text.Has(slide.Text) || Text.Has(slide.LinkText)) {
                  <div class="overlay overlay-@contentEffect"></div>
                }
                <div class="container-fluid h-100">
                  <div class="@helpers.RowClasses(sldSettings)">
                    <div class="col-12 py-4">
                      <div class="@helpers.ContentClasses(sldSettings)">
                        @* Show Title in overlay *@  
                        @if (Text.Has(slide.Title)) {
                          <p class="lead" data-swiper-parallax="-250">@slide.Title</p>
                        }
                        @* Show Description / additional Text in overlay *@  
                        @if (Text.Has(slide.Text)) {
                          <div class="co-slidertext" data-swiper-parallax="-500">@Html.Raw(slide.Text)</div>
                        }
                        @* Show Link in overlay *@  
                        @if (Text.Has(slide.LinkText)) {
                          <div data-swiper-parallax="-750">
                            <a class="btn btn-primary" href="@Link.Image(slide.Link)" target='@(slide.LinkBlankTarget == true ? "_blank" : "")'>@slide.LinkText</a>
                          </div>
                        }
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          }
          @* if we don't have slides, show a dummy slide and provide buttons to start adding *@
          @if(Content.Slides.Count == 0) {
            @Html.Partial("./_Swiper.PartEmpty.cshtml")
          }
        </div>

        @* Pagination *@
        @if (swiperSettings.Pagination) {
          <div class="swiper-pagination"></div>
        }

        @* Navigation buttons (right left arrows) *@
        @if (swiperSettings.Navigation) {
          <div class="swiper-button-prev"></div>
          <div class="swiper-button-next"></div>
        }
      </div>
    </div>
  </div>
</div>

@Html.Partial("./_Swiper.PartAssets.cshtml", new { SwiperSettings = swiperSettings })