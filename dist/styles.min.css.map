{"version":3,"sources":["Z:\\Portals\\Swiper\\2sxc\\Swiper/src\\scss\\_Styles.scss","Z:\\Portals\\Swiper\\2sxc\\Swiper/..\\..\\..\\_default\\Skins\\Bootstrap 4 Instant\\node_modules\\bootstrap\\scss\\mixins\\_breakpoints.scss","Z:\\Portals\\Swiper\\2sxc\\Swiper/..\\..\\..\\_default\\Skins\\Bootstrap 4 Instant\\src\\scss\\_variables.scss"],"names":[],"mappings":"AAIA,WACE,cACE,iBAAkB,CADpB,0BAII,kBAAmB,CAJvB,yBAQI,eAAgB,CARpB,yBAYI,kBAAmB,CAZvB,yBAgBI,iBAAkB,CAhBtB,yBAoBI,eAAgB,CApBpB,yBAwBI,gBAAiB,CAxBrB,uJAiCI,UAAW,CAjCf,iMAoCM,iBAAmB,CACnB,KAAM,CACN,MAAO,CACP,QAAS,CACT,OAAQ,CAxCd,6SA2CQ,oBAAsB,CACtB,qBAAuB,CACxB,iCAOH,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,QAAS,CACT,OAAQ,CAMT,mDAHG,oBAAsB,CACtB,qBAAuB,CACxB,kBAKH,UAAW,CACX,WAAY,CAFd,+CAMM,UAAW,CACX,WAAY,CACZ,2BAA4B,CAC5B,qBAAsB,CACtB,uBAA2B,CAVjC,6DAaQ,YAAa,CAbrB,qKAmBU,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,WAAY,CACZ,UAAW,CAvBrB,+PA+BU,+FAAwG,CA/BlH,8QAmCU,+FAAwG,CAnClH,+PA2CU,yEAA+E,CA3CzF,8QA+CU,qEAAgF,CA/C1F,+PAuDU,yEAA+E,CAvDzF,8QA2DU,qEAA8E,CA3DxF,kCAiEM,UAAW,CACf,iBAA+B,CAC3B,mCAA4C,CAC5C,mBAAoC,CApE1C,uCAuEQ,kBAAmC,CACnC,gBAA8B,CAC9B,eAAgB,CAcjB,CCjGL,yBDUF,uCA4EU,iBAAkB,CAClB,cAA4B,CAU/B,CCjGL,yBDUF,uCAgFU,iBAAkB,CAClB,cAA4B,CAM/B,CCjGL,0BDUF,uCAoFU,iBAAkB,CAClB,cAA4B,CAE/B,CAzJT,WAkEE,4EA6FI,aEvJiB,CF0DrB,mDAiGI,wBE3JiB,CF4JlB,OAID,iBAAkB,CAClB,WAAY,CACZ,QAAS,CACT,UAAW,CACX,wBAAyB,CACzB,0BAA2B,CAC5B,MAGC,eAAgB,CAChB,UAAW,CACX,kBE3KmB,CF4KnB,WAAY,CACZ,UAAW,CACZ,OAGC,OAAQ,CACR,QAAS,CACT,iCAAkC,CAClC,oCAAqC,CACrC,8BErLmB,CFsLnB,WAAY,CACb","file":"styles.min.css","sourcesContent":["// Adjust these paths to your skin path if you want to recompile the SASS\r\n@import \"../../../_default/Skins/Bootstrap 4 Instant/src/scss/_variables.scss\";\r\n@import \"../../../_default/Skins/Bootstrap 4 Instant/node_modules/bootstrap/scss/mixins/_breakpoints.scss\";\r\n\r\n@media all {\r\n  .aspect-ratio {\r\n    position: relative;\r\n    \r\n    &.height-16-9 {\r\n      padding-top: 56.25%;\r\n    }\r\n\r\n    &.height-4-3 {\r\n      padding-top: 75%;\r\n    }\r\n\r\n    &.height-3-2 {\r\n      padding-top: 66.66%;\r\n    }\r\n\r\n    &.height-8-5 {\r\n      padding-top: 62.5%;\r\n    }\r\n\r\n    &.height-2-1 {\r\n      padding-top: 50%;\r\n    }\r\n\r\n    &.height-1-1 {\r\n      padding-top: 100%;\r\n    }\r\n\r\n    &.height-16-9,\r\n    &.height-4-3,\r\n    &.height-3-2,\r\n    &.height-8-5,\r\n    &.height-2-1,\r\n    &.height-1-1 {\r\n      width: 100%;\r\n\r\n      .inner {\r\n        position:  absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n  \r\n        .swiper-container {\r\n          width: 100% !important;\r\n          height: 100% !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  [style*=\"--aspect-ratio\"] {\r\n    .inner {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n\r\n      .swiper-container {\r\n        width: 100% !important;\r\n        height: 100% !important;\r\n      } \r\n    }\r\n  }  \r\n\r\n  .swiper-container {\r\n    width: 100%;\r\n    height: 50vh;\r\n\r\n    .swiper-slide {\r\n      .image-wrapper {\r\n        width: 100%;\r\n        height: 100%;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        background-position: center;\r\n\r\n        .overlay-none {\r\n          display: none;\r\n        }\r\n\r\n        &.content-effect-gradient,\r\n        &.content-effect-gradient-wide {\r\n          .overlay {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            height: 100%;\r\n            width: 100%;\r\n          }\r\n        }\r\n\r\n        &.content-position-cc,\r\n        &.content-position-cl,\r\n        &.content-position-cr {\r\n          .overlay-gradient {\r\n            background: linear-gradient(0deg, rgba(255,255,255,0) 25%, rgba(0,0,0,0.4) 50%, rgba(255,255,255,0) 75%);\r\n          }\r\n\r\n          .overlay-gradient-wide {\r\n            background: linear-gradient(0deg, rgba(255,255,255,0) 10%, rgba(0,0,0,0.4) 50%, rgba(255,255,255,0) 90%);\r\n          }\r\n        }\r\n\r\n        &.content-position-bc,\r\n        &.content-position-bl,\r\n        &.content-position-br {\r\n          .overlay-gradient {\r\n            background: linear-gradient(0deg, rgba(0,0,0,0.4) 25%, rgba(255,255,255,0) 50%);\r\n          }\r\n\r\n          .overlay-gradient-wide {\r\n            background: linear-gradient(0deg, rgba(0,0,0,0.4) 50%, rgba(255,255,255,0) 100%);\r\n          }\r\n        }\r\n\r\n        &.content-position-tc,\r\n        &.content-position-tl,\r\n        &.content-position-tr {\r\n          .overlay-gradient {\r\n            background: linear-gradient(0deg, rgba(255,255,255,0) 50%, rgba(0,0,0,0.4) 75%);\r\n          }\r\n\r\n          .overlay-gradient-wide {\r\n            background: linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(0,0,0,0.4) 50%);\r\n          }\r\n        }\r\n      }\r\n\r\n      p {\r\n        color: #fff;\r\n\t\t\t\tfont-size: $font-size-base*1.25;\r\n        text-shadow: 0px 0px 16px rgba(0, 0, 0, 0.8);\r\n        margin: 0 0 $font-size-base * 0.6875;\r\n        \r\n        &.lead { \r\n          margin-bottom: $grid-gutter-width/2;\r\n          font-size: $font-size-base*1.8;\t\r\n          font-weight: 600;\r\n\r\n          @include media-breakpoint-up(md)  {\r\n            line-height: 1.2em;\r\n            font-size: $font-size-base*3;\t\r\n          }\t\t\r\n          @include media-breakpoint-up(lg)  {\r\n            line-height: 1.2em;\r\n            font-size: $font-size-base*4;\t\r\n          }\t\t\t\t\r\n          @include media-breakpoint-up(xl)  {\r\n            line-height: 1.2em;\r\n            font-size: $font-size-base*5;\t\r\n          }\t\t\t\t\r\n        }\r\n\t\t\t}\t\r\n    }\r\n\r\n    .swiper-button-next,\r\n    .swiper-button-prev {\r\n      color: $primary;\r\n    }\r\n\r\n    .swiper-pagination-bullet-active {\r\n      background-color: $primary;\r\n    }\r\n  }\r\n\r\n  .arrow {\r\n    position: absolute;\r\n    width: 120px;\r\n    top: 20px;\r\n    right: 50px;\r\n    transform: rotate(-45deg);\r\n    transform-origin: top right;\r\n  }\r\n  \r\n  .line {\r\n    margin-top: 14px;\r\n    width: 90px;\r\n    background: $primary;\r\n    height: 10px;\r\n    float: left;\r\n  }\r\n  \r\n  .point {\r\n    width: 0;\r\n    height: 0;\r\n    border-top: 20px solid transparent;\r\n    border-bottom: 20px solid transparent;\r\n    border-left: 30px solid $primary;\r\n    float: right;\r\n  }\r\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","﻿// ----------------------------------------------------------------------------------------------------\r\n// 1. Load Bootstrap 4 Helpers\r\n@import \"../../node_modules/bootstrap/scss/functions\";\r\n@import \"../../node_modules/bootstrap/scss/mixins\";\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 2. Set Bootstrap Core Variables Presets\r\n// These variables should be set before we load the standard bootstrap variables\r\n// Bootstrap will keep what we set here, and only set variables we have not defined yet\r\n\r\n// 2.1 Set primary and secondary color - used all over the theme\r\n$primary:       #65345c;\r\n$secondary:     #6c757d;\r\n\r\n// 2.2 set Body colors\r\n$body-bg:       #efefef;\r\n$body-color:    #222222;\r\n\r\n\r\n// 2.3 Custom Bootstrap Instant 4 Theme variables - used in the variations of the themes */\r\n$tosic-header-background: #fff;\r\n$tosic-footer-background: $primary;\r\n$tosic-footer-color:      #fff;\r\n$tosic-link-decoration:   none;\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 3. Special CSS for specific pages\r\n// The body tag always has things like tab-xx to say what page it's on. Use these to target special CSS.\r\n// Classes you can use are:\r\n// - tab-##\r\n// - tab-is-home (this class is only added on home)\r\n// - root-tab-## the top level tab which is activated, to allow different colors across an entire section\r\n// - lang-en / lang-de etc. \r\n\r\n// Set the width of the logo specifically for the home page only\r\n// .tab-is-home {\r\n//   header {\r\n//     .ly-logo {\r\n//       width: 250px;\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 4. Variables we often override\r\n// These are placed after the bootstrap variables import, so that things like $gray already exist\r\n// Unocmment the lines you want to change, or get more from the ../../node_modules/bootstrap/scss/variables.scss\r\n\r\n// Fonts\r\n// stylelint-disable value-keyword-case\r\n$font-family-sans-serif: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\",sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n$font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n$font-family-base: $font-family-sans-serif;\r\n// stylelint-enable value-keyword-case\r\n\r\n// Links\r\n// Style anchor elements.\r\n// $link-color: $primary;\r\n// $link-decoration: none;\r\n// $link-hover-color: darken($link-color, 15%);\r\n// $link-hover-decoration: none;\r\n\r\n// Fonts\r\n// Font, line-height, and color for body text, headings, and more.\r\n// $font-size-base: 1rem; // Assumes the browser default, typically `16px`\r\n// $font-size-lg: ($font-size-base * 1.25);\r\n// $font-size-sm: ($font-size-base * .875);\r\n\r\n// $font-weight-light: 300;\r\n// $font-weight-normal: 400;\r\n// $font-weight-bold: 700;\r\n\r\n// $font-weight-base: $font-weight-normal;\r\n// $line-height-base: 1.42857;\r\n\r\n// $h1-font-size: $font-size-base * 2.125;\r\n// $h2-font-size: $font-size-base * 1.7;\r\n// $h3-font-size: $font-size-base * 1.25;\r\n// $h4-font-size: $font-size-base * 1.25;\r\n// $h5-font-size: $font-size-base;\r\n// $h6-font-size: $font-size-base;\r\n\r\n// $headings-font-family: inherit;\r\n// $headings-font-weight: 700;\r\n// $headings-line-height: 1.2;\r\n// $headings-color: inherit;\r\n\r\n// $display1-size: 6rem;\r\n// $display2-size: 5.5rem;\r\n// $display3-size: 4.5rem;\r\n// $display4-size: 3.5rem;\r\n\r\n// $display1-weight: 300;\r\n// $display2-weight: 300;\r\n// $display3-weight: 300;\r\n// $display4-weight: 300;\r\n// $display-line-height: $headings-line-height;\r\n\r\n// $lead-font-size: ($font-size-base * 1.25);\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------------\r\n// 5. Initialize the default bootstrap variables so they are ready\r\n// Tip: In VS-Code, Ctrl+Click on the link below to open the file\r\n@import \"../../node_modules/bootstrap/scss/variables\";\r\n\r\n"]}